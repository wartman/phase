namespace Phase

use Phase::Language::{ Type }

class Scope {
  new(
    this.parent: ?Scope = null,
    this.values: ?Map<String, Type> = null,
    this.children: ?Array<Scope> = null
  ) {
    if (this.values == null) this.values = Map()
    if (this.children == null) this.children = []
  }

  declare(name: String, type: Type) {
    this.values[name] = type
  }

  isDeclared(name: String): Bool {
    if (!(this.values[name] |> isset()) && this.parent != null) {
      return this.parent.isDeclared(name)
    }
    return this.values[name] |> isset()
  }

  resolve(name: String): Type {
    if (this.values[name] |> isset()) {
      return this.values[name]
    }
    if (this.parent != null) {
      return this.parent.resolve(name)
    }
    return Type.TUnknown(null)
  }

  addChild(child: Scope) {
    this.children.push(child)
  }

  pushChild(): Scope {
    var child = Scope(this)
    this.addChild(child)
    return child
  }
}
